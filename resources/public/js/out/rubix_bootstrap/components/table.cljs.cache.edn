;; Analyzed by ClojureScript 0.0-3269
{:use-macros nil, :excludes #{}, :name rubix-bootstrap.components.table, :imports nil, :requires {r reagent.core, reagent.core reagent.core, util cljsjs.util, cljsjs.util cljsjs.util}, :uses nil, :defs {gen-classes {:protocol-inline nil, :meta {:file "/Users/shripadkrishna/projects/rubix/rubix-bootstrap/src/cljs/rubix_bootstrap/components/table.cljs", :line 5, :column 8, :end-line 5, :end-column 19, :private true, :arglists (quote ([props]))}, :private true, :name rubix-bootstrap.components.table/gen-classes, :variadic false, :file "src/cljs/rubix_bootstrap/components/table.cljs", :end-column 19, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, table-construct {:protocol-inline nil, :meta {:file "/Users/shripadkrishna/projects/rubix/rubix-bootstrap/src/cljs/rubix_bootstrap/components/table.cljs", :line 24, :column 8, :end-line 24, :end-column 23, :private true, :arglists (quote ([props classes]))}, :private true, :name rubix-bootstrap.components.table/table-construct, :variadic false, :file "src/cljs/rubix_bootstrap/components/table.cljs", :end-column 23, :method-params ([props classes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props classes]))}, table {:protocol-inline nil, :meta {:file "/Users/shripadkrishna/projects/rubix/rubix-bootstrap/src/cljs/rubix_bootstrap/components/table.cljs", :line 31, :column 7, :end-line 31, :end-column 12, :arglists (quote ([props]))}, :name rubix-bootstrap.components.table/table, :variadic false, :file "src/cljs/rubix_bootstrap/components/table.cljs", :end-column 12, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:striped :responsive :children :table :collapsed :bordered :alignMiddle :className :hover :div.table-responsive :alignTop :class :alignBottom :condensed}, :order [:hover :striped :bordered :collapsed :condensed :alignTop :alignMiddle :alignBottom :table :class :className :children :responsive :div.table-responsive]}, :doc nil}