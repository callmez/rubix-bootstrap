;; Analyzed by ClojureScript 0.0-3269
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name cljsjs.dispatcher, :imports nil, :requires {r reagent.core, reagent.core reagent.core, cljs.core.async cljs.core.async}, :uses {pub cljs.core.async, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, >! cljs.core.async, unsub cljs.core.async}, :defs {c {:name cljsjs.dispatcher/c, :file "src/cljs/cljsjs/dispatcher.cljs", :line 6, :column 1, :end-line 6, :end-column 11, :meta {:file "/Users/shripadkrishna/projects/rubix/rubix-bootstrap/src/cljs/cljsjs/dispatcher.cljs", :line 6, :column 10, :end-line 6, :end-column 11}}, subscriptions {:name cljsjs.dispatcher/subscriptions, :file "src/cljs/cljsjs/dispatcher.cljs", :line 7, :column 1, :end-line 7, :end-column 23, :meta {:file "/Users/shripadkrishna/projects/rubix/rubix-bootstrap/src/cljs/cljsjs/dispatcher.cljs", :line 7, :column 10, :end-line 7, :end-column 23}}, publication {:name cljsjs.dispatcher/publication, :file "src/cljs/cljsjs/dispatcher.cljs", :line 9, :column 1, :end-line 9, :end-column 21, :meta {:file "/Users/shripadkrishna/projects/rubix/rubix-bootstrap/src/cljs/cljsjs/dispatcher.cljs", :line 9, :column 10, :end-line 9, :end-column 21}}, notiy-fn {:protocol-inline nil, :meta {:file "/Users/shripadkrishna/projects/rubix/rubix-bootstrap/src/cljs/cljsjs/dispatcher.cljs", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([channel callback]))}, :name cljsjs.dispatcher/notiy-fn, :variadic false, :file "src/cljs/cljsjs/dispatcher.cljs", :end-column 15, :method-params ([channel callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([channel callback]))}, subscribe {:protocol-inline nil, :meta {:file "/Users/shripadkrishna/projects/rubix/rubix-bootstrap/src/cljs/cljsjs/dispatcher.cljs", :line 17, :column 7, :end-line 17, :end-column 16, :arglists (quote ([topic callback]))}, :name cljsjs.dispatcher/subscribe, :variadic false, :file "src/cljs/cljsjs/dispatcher.cljs", :end-column 16, :method-params ([topic callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([topic callback]))}, unsubscribe {:protocol-inline nil, :meta {:file "/Users/shripadkrishna/projects/rubix/rubix-bootstrap/src/cljs/cljsjs/dispatcher.cljs", :line 23, :column 7, :end-line 23, :end-column 18, :arglists (quote ([topic]))}, :name cljsjs.dispatcher/unsubscribe, :variadic false, :file "src/cljs/cljsjs/dispatcher.cljs", :end-column 18, :method-params ([topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([topic]))}, publish {:protocol-inline nil, :meta {:file "/Users/shripadkrishna/projects/rubix/rubix-bootstrap/src/cljs/cljsjs/dispatcher.cljs", :line 29, :column 7, :end-line 29, :end-column 14, :arglists (quote ([topic & [data]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(topic [data])], :arglists ([topic & [data]]), :arglists-meta (nil)}}, :name cljsjs.dispatcher/publish, :variadic true, :file "src/cljs/cljsjs/dispatcher.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(topic [data])], :arglists ([topic & [data]]), :arglists-meta (nil)}, :method-params [(topic [data])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists ([topic & [data]])}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :recur :topic :subscription :data}, :order [:topic :recur :else :subscription :data]}, :doc nil}